#!/bin/sh
#	$ssdlinux: rc.pcmcia.kernel,v 1.2 2005/01/06 06:29:06 todoroki Exp $

if [ -f /etc/rc.subr ]; then
	. /etc/rc.subr
else
	echo "Can't read /etc/rc.subr; aborting."
	exit 1;
fi

if [ -f /etc/rc.conf ]; then
	. /etc/rc.conf
fi

usage()
{
    echo "Usage: $0 {start|stop|restart}"
}

cleanup()
{
    while read SN CLASS MOD INST DEV EXTRA ; do
	if [ "$SN" != "Socket" ] ; then
	    /etc/pcmcia/$CLASS stop $DEV 2> /dev/null
	fi
    done
}

EXITCODE=1
for x in "1" ; do

    if [ "$pcic" = "" ] ; then
	echo "PCIC not defined in /etc/rc.conf!"
	break
    fi

    if [ $# -lt 1 ] ; then usage ; break ; fi
    action=$1

    case "$action" in

    'start')
	echo -n "Starting PCMCIA services:"
	SC=/var/run/pcmcia-scheme
	if [ -L $SC -o ! -O $SC ] ; then rm -f $SC ; fi
	if [ ! -f $SC ] ; then umask 022 ; echo > $SC ; fi
        if [ "$pcmcia_scheme" ] ; then umask 022 ; echo $pcmcia_scheme > $SC ; fi
	fgrep -q pcmcia /proc/devices
	if [ $? -ne 0 ] ; then
	    PC=/lib/modules/`uname -r`/pcmcia
	    if [ -d $PC ] ; then
		echo -n " modules"
		/sbin/insmod pcmcia_core $pcmcia_core_flags 2> /dev/null
		/sbin/insmod yenta_socket 2> /dev/null
		/sbin/insmod ds 2> /dev/null
	    else
		echo " module directory $PC not found."
		break
	    fi
	fi
	if [ -s /var/run/cardmgr.pid ] && \
	   kill -0 `cat /var/run/cardmgr.pid` 2>/dev/null ; then
	    echo " cardmgr is already running."
	else
	    if [ -r /var/run/stab ] ; then
		cat /var/run/stab | cleanup
	    fi
#	    echo " cardmgr."
	    /sbin/cardmgr $cardmgr_flags
	fi
	if [ -d /var/lock/subsys ] ; then
	    touch /var/lock/subsys/pcmcia
	fi
	;;

    'stop')
	echo -n "Shutting down PCMCIA services:"
	PID=`cat /var/run/cardmgr.pid`
	kill $PID
	echo -n " cardmgr"
        # Give cardmgr a few seconds to handle the signal
        kill -0 $PID 2>/dev/null && sleep 2 && \
        kill -0 $PID 2>/dev/null && sleep 2 && \
        kill -0 $PID 2>/dev/null && sleep 2 && \
        kill -0 $PID 2>/dev/null
	if fgrep -q "ds  " /proc/modules ; then
	    echo -n " modules"
	    /sbin/rmmod ds
	fi
	echo "."
	rm -f /var/lock/subsys/pcmcia
	EXITCODE=0
	;;

    'restart')
	$0 stop
	$0 start
	EXITCODE=0
	;;

    *)
	usage
	;;

    esac

done

# Only exit if we're in our own subshell
#if [ "${0##*/}" = "rc.pcmcia" ] ; then
#    exit $EXITCODE
#fi
