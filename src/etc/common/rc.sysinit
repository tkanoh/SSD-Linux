#!/bin/sh
#	$ssdlinux: rc.sysinit,v 1.4 2004/08/09 03:21:58 todoroki Exp $

PATH=/sbin:/usr/sbin:/bin:/usr/bin

/sbin/update &

/sbin/fsck -C -a /
/sbin/fsck -A -R -T -a
if [ $? -gt 1 ]; then
	echo
	echo "Automatic file system check failed; help!"
	echo "Your filesystem has been severely damaged. You can probably correct"
	echo "this problem by running 'e2fsck -v -y <partition>' manually."
	echo "After you logout, the system will reboot."
	echo
	PS1="(Repair filesystem)# "
	export PS1
	/sbin/sulogin
	echo "unmounting file systems."
/sbin/mount -n -o remount,rw /
/bin/rm -f /etc/mtab
	/sbin/umount -a -r
	/sbin/mount -n -o remount,ro /
	echo "rebooting system..."
	/sbin/reboot -f
fi

/sbin/mount -n -v -o remount,rw /

if [ $? -gt 0 ] ; then
	echo
	echo "Attempt to remount root device as read-write failed!  This is going to"		
	echo "cause serious problems."
	echo
	echo "If you're using the UMSDOS filesystem, you **MUST** mount the root partition"
	echo "read-write!  You can make sure the root filesystem is getting mounted "
	echo "read-write with the 'rw' flag to Loadlin:"
	echo
	echo "loadlin vmlinuz root=/dev/hda1 rw   (replace /dev/hda1 with your root device)"
	echo
	echo "Normal bootdisks can be made to mount a system read-write with the rdev command:"
	echo
	echo "rdev -R /dev/fd0 0"
	echo
	echo "You can also get into your system by using a bootkernel disk with a command"
	echo "like this on the LILO prompt line:  (change the root partition name as needed)"
	echo
	echo "LILO: mount root=/dev/hda1 rw"
	echo
	echo "Please press ENTER to continue, then reboot and use one of the above methods to"
	echo -n "get into your machine and start looking for the problem. "
	read junk;
fi

# remove /etc/mtab* so that mount will create it with a root entry
/bin/rm -f /etc/mtab* /etc/nologin /etc/shutdownpid

# mount file systems in fstab (and create an entry for /)
# but not NFS or SMB because TCP/IP is not yet configured
/sbin/mount -a -v -t nonfs,nosmbfs

# Clean up temporary files on the /var volume:
/bin/rm -f /var/run/*.pid /var/log/setup/tmp/*

# Looks like we have to create this.
/bin/rm -f /var/run/utmp && /usr/bin/touch /var/run/utmp

if [ -f /etc/rc.subr ]; then
	. /etc/rc.subr
else
	echo "Can't read /etc/rc.subr; aborting."
	exit 1;
fi

if [ -f /etc/rc.conf ]; then
	. /etc/rc.conf
fi

# load kernel modules specified in /etc/lkm.conf
if checkyesno lkm && [ -f /etc/rc.lkm ]; then
	. /etc/rc.lkm start
fi

RELEASE=`/bin/uname -r`

if checkyesno parport_pc ; then
	if cat /proc/ksyms | grep "\[parport_pc\]" 1> /dev/null 2> /dev/null ; then
		echo "parport0 is built-in, not loading module" > /dev/null
	else
		if [ -r /lib/modules/$RELEASE/misc/parport_pc.o \
		     -o -r /lib/modules/$RELEASE/misc/parport_pc.o.gz \
		     -o -r /lib/modules/$RELEASE/kernel/drivers/parport/parport_pc.o \
		     -o -r /lib/modules/$RELEASE/kernel/drivers/parport/parport_pc.o.gz ]; then
			/sbin/modprobe parport_pc $parport_pc_flags
		fi
	fi
fi

if checkyesno lpd ; then
	if cat /proc/ksyms | grep "\[lp\]" 1> /dev/null 2> /dev/null ; then
		echo "lp support built-in, not loading module" > /dev/null
	else
		if [ -r /lib/modules/$RELEASE/misc/lp.o \
		     -o -r /lib/modules/$RELEASE/misc/lp.o.gz \
		     -o -r /lib/modules/$RELEASE/kernel/drivers/char/lp.o \
		     -o -r /lib/modules/$RELEASE/kernel/drivers/char/lp.o.gz ]; then
			/sbin/modprobe lp
		fi
	fi
fi

if [ -f /etc/rc.hotplug ]; then
	. /etc/rc.hotplug start
fi

if checkyesno pcmcia && [ -f /etc/rc.pcmcia ]; then
	. /etc/rc.pcmcia start
fi

if checkyesno serial && [ -f /etc/rc.serial ]; then
	. /etc/rc.serial
fi

/sbin/swapon -a
if [ "$no_swap" != YES ]; then
	if [ "`/sbin/swapon -s | grep '/dev'`" = "" ]; then
		echo "WARNING:  no swap space configured!"
	fi
fi

if [ -x /sbin/hwclock ]; then
	if [ -z "$hardwareclock" -a -f /etc/hardwareclock ]; then
		hardwareclock=`cat /etc/hardwareclock`
	fi
	/sbin/hwclock --$hardwareclock --hctosys
fi

if [ -f "/etc/random-seed" ]; then
	/bin/cat /etc/random-seed >/dev/urandom
fi
dd if=/dev/urandom of=/etc/random-seed count=1 bs=512 2> /dev/null
