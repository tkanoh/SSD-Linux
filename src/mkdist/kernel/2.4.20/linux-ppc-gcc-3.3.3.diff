diff -Naru linux-2.4.20.orig/drivers/ide/ide-cd.h linux-2.4.20/drivers/ide/ide-cd.h
--- linux-2.4.20.orig/drivers/ide/ide-cd.h	2002-12-11 11:37:47.000000000 +0900
+++ linux-2.4.20/drivers/ide/ide-cd.h	2003-09-10 16:32:20.000000000 +0900
@@ -437,7 +437,7 @@
 
 	byte     curlba[3];
 	byte     nslots;
-	__u8 short slot_tablelen;
+	__u16 slot_tablelen;
 };
 
 
diff -Naru linux-2.4.20.orig/drivers/scsi/aic7xxx/aic7xxx_osm.c linux-2.4.20/drivers/scsi/aic7xxx/aic7xxx_osm.c
--- linux-2.4.20.orig/drivers/scsi/aic7xxx/aic7xxx_osm.c	2002-12-11 11:40:00.000000000 +0900
+++ linux-2.4.20/drivers/scsi/aic7xxx/aic7xxx_osm.c	2003-09-10 16:32:20.000000000 +0900
@@ -417,26 +417,27 @@
 MODULE_LICENSE("Dual BSD/GPL");
 #endif
 MODULE_PARM(aic7xxx, "s");
-MODULE_PARM_DESC(aic7xxx, "period delimited, options string.
-	verbose			Enable verbose/diagnostic logging
-	no_probe		Disable EISA/VLB controller probing
-	no_reset		Supress initial bus resets
-	extended		Enable extended geometry on all controllers
-	periodic_otag		Send an ordered tagged transaction periodically
-				to prevent tag starvation.  This may be
-				required by some older disk drives/RAID arrays. 
-	reverse_scan		Sort PCI devices highest Bus/Slot to lowest
-	tag_info:<tag_str>	Set per-target tag depth
-	seltime:<int>		Selection Timeout(0/256ms,1/128ms,2/64ms,3/32ms)
-
-	Sample /etc/modules.conf line:
-		Enable verbose logging
-		Disable EISA/VLB probing
-		Set tag depth on Controller 2/Target 2 to 10 tags
-		Shorten the selection timeout to 128ms from its default of 256
-
-	options aic7xxx='\"verbose.no_probe.tag_info:{{}.{}.{..10}}.seltime:1\"'
-");
+MODULE_PARM_DESC(aic7xxx, 
+"period delimited, options string.\n"
+"	verbose			Enable verbose/diagnostic logging\n"
+"	no_probe		Disable EISA/VLB controller probing\n"
+"	no_reset		Supress initial bus resets\n"
+"	extended		Enable extended geometry on all controllers\n"
+"	periodic_otag		Send an ordered tagged transaction periodically\n"
+"				to prevent tag starvation.  This may be\n"
+"				required by some older disk drives/RAID arrays.\n" 
+"	reverse_scan		Sort PCI devices highest Bus/Slot to lowest\n"
+"	tag_info:<tag_str>	Set per-target tag depth\n"
+"	seltime:<int>		Selection Timeout(0/256ms,1/128ms,2/64ms,3/32ms)\n"
+"\n"
+"	Sample /etc/modules.conf line:\n"
+"		Enable verbose logging\n"
+"		Disable EISA/VLB probing\n"
+"		Set tag depth on Controller 2/Target 2 to 10 tags\n"
+"		Shorten the selection timeout to 128ms from its default of 256\n"
+"\n"
+"	options aic7xxx='\"verbose.no_probe.tag_info:{{}.{}.{..10}}.seltime:1\"'\n"
+);
 #endif
 
 static void ahc_linux_handle_scsi_status(struct ahc_softc *,
@@ -680,7 +681,7 @@
 			consumed++;
 			next_sg = sg + 1;
 			next_sg->addr = 0;
-			next_len = 0x100000000 - (addr & 0xFFFFFFFF);
+			next_len = 0x100000000ULL - (addr & 0xFFFFFFFF);
 			len -= next_len;
 			next_len |= ((addr >> 8) + 0x1000000) & 0x7F000000;
 			next_sg->len = ahc_htole32(next_len);
diff -Naru linux-2.4.20.orig/include/asm-ppc/unistd.h linux-2.4.20/include/asm-ppc/unistd.h
--- linux-2.4.20.orig/include/asm-ppc/unistd.h	2002-12-11 11:38:03.000000000 +0900
+++ linux-2.4.20/include/asm-ppc/unistd.h	2003-09-10 16:41:59.000000000 +0900
@@ -313,7 +313,7 @@
 			: "=&r" (__sc_3), "=&r" (__sc_0)		\
 			: "0"   (__sc_3), "1"   (__sc_0),		\
 			  "r"   (__sc_4)				\
-			: __syscall_clobbers);				\
+			: "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r12");	\
 		__sc_ret = __sc_3;					\
 		__sc_err = __sc_0;					\
 	}								\
@@ -341,7 +341,7 @@
 			: "0"   (__sc_3), "1"   (__sc_0),		\
 			  "r"   (__sc_4),				\
 			  "r"   (__sc_5)				\
-			: __syscall_clobbers);				\
+			: "r6", "r7", "r8", "r9", "r10", "r11", "r12");	\
 		__sc_ret = __sc_3;					\
 		__sc_err = __sc_0;					\
 	}								\
@@ -372,7 +372,7 @@
 			  "r"   (__sc_4),				\
 			  "r"   (__sc_5),				\
 			  "r"   (__sc_6)				\
-			: __syscall_clobbers);				\
+			: "r7", "r8", "r9", "r10", "r11", "r12");	\
 		__sc_ret = __sc_3;					\
 		__sc_err = __sc_0;					\
 	}								\
@@ -406,7 +406,7 @@
 			  "r"   (__sc_5),				\
 			  "r"   (__sc_6),				\
 			  "r"   (__sc_7)				\
-			: __syscall_clobbers);				\
+			: "r8", "r9", "r10", "r11", "r12");		\
 		__sc_ret = __sc_3;					\
 		__sc_err = __sc_0;					\
 	}								\
diff -Naru linux-2.4.20.orig/include/asm-ppc64/unistd.h linux-2.4.20/include/asm-ppc64/unistd.h
--- linux-2.4.20.orig/include/asm-ppc64/unistd.h	2002-12-11 11:37:46.000000000 +0900
+++ linux-2.4.20/include/asm-ppc64/unistd.h	2003-09-10 16:47:03.000000000 +0900
@@ -304,7 +304,7 @@
 			: "=&r" (__sc_3), "=&r" (__sc_0)		\
 			: "0"   (__sc_3), "1"   (__sc_0),		\
 			  "r"   (__sc_4)				\
-			: __syscall_clobbers);				\
+			: "r5", "r6", "r7", "r8", "r9", "r10", "r11", "r12");	\
 		__sc_ret = __sc_3;					\
 		__sc_err = __sc_0;					\
 	}								\
@@ -332,7 +332,7 @@
 			: "0"   (__sc_3), "1"   (__sc_0),		\
 			  "r"   (__sc_4),				\
 			  "r"   (__sc_5)				\
-			: __syscall_clobbers);				\
+			: "r6", "r7", "r8", "r9", "r10", "r11", "r12");	\
 		__sc_ret = __sc_3;					\
 		__sc_err = __sc_0;					\
 	}								\
@@ -363,7 +363,7 @@
 			  "r"   (__sc_4),				\
 			  "r"   (__sc_5),				\
 			  "r"   (__sc_6)				\
-			: __syscall_clobbers);				\
+			: "r7", "r8", "r9", "r10", "r11", "r12");	\
 		__sc_ret = __sc_3;					\
 		__sc_err = __sc_0;					\
 	}								\
@@ -397,7 +397,7 @@
 			  "r"   (__sc_5),				\
 			  "r"   (__sc_6),				\
 			  "r"   (__sc_7)				\
-			: __syscall_clobbers);				\
+			: "r8", "r9", "r10", "r11", "r12");		\
 		__sc_ret = __sc_3;					\
 		__sc_err = __sc_0;					\
 	}								\
diff -Naru linux-2.4.20.orig/net/core/rtnetlink.c linux-2.4.20/net/core/rtnetlink.c
--- linux-2.4.20.orig/net/core/rtnetlink.c	2002-12-11 11:37:14.000000000 +0900
+++ linux-2.4.20/net/core/rtnetlink.c	2003-09-10 16:32:20.000000000 +0900
@@ -394,7 +394,7 @@
  * Malformed skbs with wrong lengths of messages are discarded silently.
  */
 
-extern __inline__ int rtnetlink_rcv_skb(struct sk_buff *skb)
+static inline int rtnetlink_rcv_skb(struct sk_buff *skb)
 {
 	int err;
 	struct nlmsghdr * nlh;
